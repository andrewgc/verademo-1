valuesFilePath: ./values.yml
resources:
  - name: mvnRepo
    type: GitRepo
    configuration:
      path: "bnreplah/verademo" # {{ .Values.repoPath }}
      gitProvider: "github" # {{ .Values.gitProvider }}

  - name: mvnBuildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: "myArtIntegration"
pipelines:
- name: Verademo_hello_world
  steps:
    
    - name: MvnBuildStep
      type: MvnBuild
      configuration:
          #inherits all the tags from bash
          mvnCommand: "clean package"
          sourceLocation: "app/"
          integrations:
            - name: "myArtIntegration"
            - name: "VeracodeAPICredentialsBen"
          inputResources:
            - name: mvnRepo
          outputResources:
            - name:  mvnBuildInfo
          autoPublishBuildInfo: true
          
      execution:
        onSuccess:
          - printenv int_VeracodeAPICredentialsBen_VERACODE_API_KEY_ID
          - WRAPPER_VERSION=`curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | grep latest |  cut -d '>' -f 2 | cut -d '<' -f 1`
          - echo '[INFO] ------------------------------------------------------------------------'
          - echo '[INFO] DOWNLOADING VERACODE JAVA WRAPPER'
          - | 
            wget https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$WRAPPER_VERSION/vosp-api-wrappers-java-$WRAPPER_VERSION.jar -O VeracodeJavaAPI.jar
            chmod 755 VeracodeJavaAPI.jar
          - ls -la
          - java -jar VeracodeJavaAPI.jar -vid $( printenv int_VeracodeAPICredentialsBen_VERACODE_API_KEY_ID ) -vkey $( printenv int_VeracodeAPICredentialsBen_VERACODE_API_KEY_SECRET ) -action uploadandscan -appname "VeraDemo" -filepath dependencyState/resources/mvnRepo/app/target/verademo.war -version "jfrog-test-"${run_number} -deleteincompletescan 2 -createprofile false
        onFailure:
          - echo "failed the maven build"
         
    - name: checkArtifact
      type: Bash
      configuration:
        inputSteps:
          - name: MvnBuildStep
      execution: 
        onStart:
          - pwd
        onExecute:
          - ls -la {{ .resources.mvnRepo.output }}
          - ls -la workspace/upload
          - ls -la workspace/cache
          - ls -la workspace/download
          - ls -la dependencyState
        onSuccess:
          - >-
            echo "onSuccess executes if the onStart or onExecute sections completed without errors"
            #cd ./verademo/app
        onFailure:
          - >-
            echo "onFailure executes if either onStart or onExecute end in failure or error."
        onComplete:
          - >-
            echo "completed"

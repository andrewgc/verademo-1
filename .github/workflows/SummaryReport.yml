name: Summary Report

on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
    workflow_dispatch: 

env:
  API_ID: ${{ secrets.VERACODE_API_ID }}
  API_KEY: ${{ secrets.VERACODE_API_KEY }}
  APP_NAME: Verademo
  


jobs: 
  veracode-api-call:
    runs-on: ubuntu-latest
    outputs:
        output1: ${{steps.set_env.outputs}}
    steps:
    - name: Get Application GUID for Verademo One
      id: get_guid
      env: 
        API_ID: ${{ secrets.VERACODE_API_ID }}
        API_KEY: ${{ secrets.VERACODE_API_KEY }}
      run: |
        GUID=$(docker run --rm \
          -e VERACODE_API_KEY_ID=${{ env.API_ID }} \
          -e VERACODE_API_KEY_SECRET=${{ env.API_KEY }} \
          veracode/api-signing \
          http --auth-type veracode_hmac GET \
          https://api.veracode.com/appsec/v1/applications/?name=${{ env.APP_NAME }} \
          | jq -r '._embedded.applications[0].guid')
        echo "$GUID" > app_id.txt
        echo "APP_ID=$GUID" >> $GITHUB_ENV
        
#    - name: set env creds
#      id: set_env
#      run: |
#        echo "APP_ID=$(cat app_id.txt)" >> $GITHUB_ENV

    
    - name: Verify_Variable
      run: echo "APP_ID=$APP_ID"
      
  Get_Summary_Report:
     runs-on: ubuntu-latest
     needs: veracode-api-call
     steps:
     
     - name: Verify_Variable
       run: |
        echo "APP_ID=$APP_ID"
        echo "${{ env.APP_ID }}"
     
     - name: Summary
       env: 
        API_ID: ${{ secrets.VERACODE_API_ID }}
        API_KEY: ${{ secrets.VERACODE_API_KEY }} 
        APP_ID: ${{ env.APP_ID }}
       run: |
         echo "$APP_ID"
         docker run --rm \
         -e VERACODE_API_KEY_ID=${{ env.API_ID }} \
         -e VERACODE_API_KEY_SECRET=${{ env.API_KEY }} \
          veracode/api-signing \
          http --auth-type veracode_hmac GET \
          https://api.veracode.com/healthcheck/status
  
